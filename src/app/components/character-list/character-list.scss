// Rick and Morty Theme Colors
$primary-green: #00b74a;
$secondary-blue: #0e7db8;
$dark-bg: #1a1a1a;
$light-bg: #f5f5f5;
$text-dark: #333;
$text-light: #666;
$error-red: #e74c3c;
$warning-orange: #f39c12;
$success-green: #27ae60;

// Character Container
.character-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  background: 
    radial-gradient(circle at 20% 30%, rgba(0, 183, 74, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 70%, rgba(14, 125, 184, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 50% 50%, rgba(255, 107, 107, 0.2) 0%, transparent 50%),
    linear-gradient(135deg, #0f0f23 0%, #2d1b69 30%, #1a1a2e  70%, #16213e 100%);
  min-height: 100vh;
  border-radius: 20px;
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden;

  // Efecto de part√≠culas animadas
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(2px 2px at 20px 30px, rgba(255, 255, 255, 0.6), transparent),
      radial-gradient(2px 2px at 40px 70px, rgba(0, 183, 74, 0.8), transparent),
      radial-gradient(1px 1px at 90px 40px, rgba(14, 125, 184, 0.6), transparent),
      radial-gradient(1px 1px at 130px 80px, rgba(255, 107, 107, 0.5), transparent),
      radial-gradient(2px 2px at 160px 30px, rgba(255, 255, 255, 0.4), transparent);
    background-repeat: repeat;
    background-size: 200px 200px;
    animation: sparkle 15s linear infinite;
    pointer-events: none;
    z-index: 0;
  }

  // Efecto de ondas
  &::after {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: 
      radial-gradient(circle, transparent 20%, rgba(0, 183, 74, 0.1) 21%, rgba(0, 183, 74, 0.1) 34%, transparent 35%, transparent),
      linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);
    animation: wave 20s linear infinite;
    pointer-events: none;
    z-index: 0;
  }

  // Todos los elementos hijos deben estar por encima de los efectos
  > * {
    position: relative;
    z-index: 1;
  }
}

// Search Container
.search-container {
  display: flex;
  gap: 15px;
  margin-bottom: 30px;
  padding: 25px;
  background: rgba(255, 255, 255, 0.95);
  border-radius: 15px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
  backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.18);

  input {
    flex: 1;
    padding: 15px 20px;
    border: 2px solid transparent;
    border-radius: 12px;
    font-size: 16px;
    background: #f8f9fa;
    transition: all 0.3s ease;
    outline: none;

    &:focus {
      border-color: $primary-green;
      background: white;
      box-shadow: 0 0 20px rgba(0, 183, 74, 0.2);
      transform: translateY(-2px);
    }

    &::placeholder {
      color: $text-light;
      font-style: italic;
    }
  }

  button {
    padding: 15px 30px;
    background: linear-gradient(45deg, $primary-green, $success-green);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
    box-shadow: 0 4px 15px rgba(0, 183, 74, 0.3);

    &:hover {
      background: linear-gradient(45deg, darken($primary-green, 10%), darken($success-green, 10%));
      transform: translateY(-3px);
      box-shadow: 0 8px 25px rgba(0, 183, 74, 0.4);
    }

    &:active {
      transform: translateY(-1px);
    }
  }
}

// Loading State
.loading-state {
  text-align: center;
  padding: 60px 20px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 15px;
  margin-bottom: 20px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);

  p {
    font-size: 18px;
    color: $secondary-blue;
    margin: 0;
    font-weight: 500;
    animation: pulse 1.5s infinite;
  }

  &::before {
    content: "üõ∏";
    display: block;
    font-size: 48px;
    margin-bottom: 15px;
    animation: float 2s ease-in-out infinite;
  }
}

// Error State
.error-state {
  text-align: center;
  padding: 30px;
  background: linear-gradient(135deg, #ff6b6b, #ee5a52);
  color: white;
  border-radius: 15px;
  margin-bottom: 20px;
  box-shadow: 0 8px 32px rgba(238, 90, 82, 0.3);

  p {
    margin: 0;
    font-size: 16px;
    font-weight: 500;
  }

  &::before {
    content: "‚ö†Ô∏è";
    display: block;
    font-size: 32px;
    margin-bottom: 10px;
  }
}

// Empty State
.empty-state {
  text-align: center;
  padding: 60px 20px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 15px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);

  p {
    font-size: 18px;
    color: $text-light;
    margin: 0;
    font-weight: 500;
  }

  &::before {
    content: "üîç";
    display: block;
    font-size: 48px;
    margin-bottom: 15px;
    opacity: 0.7;
  }
}

// Character Grid
.character-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 25px;
  padding: 20px 0;
}

// Character Card
.character-card {
  background: 
    linear-gradient(135deg, rgba(255, 255, 255, 0.98) 0%, rgba(255, 255, 255, 0.92) 100%);
  border-radius: 20px;
  overflow: hidden;
  box-shadow: 
    0 10px 30px rgba(0, 0, 0, 0.3),
    0 0 0 1px rgba(255, 255, 255, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.6);
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  position: relative;

  // Efecto de brillo en el borde
  &::before {
    content: "";
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, 
      rgba(0, 183, 74, 0.6), 
      rgba(14, 125, 184, 0.6), 
      rgba(255, 107, 107, 0.6),
      rgba(0, 183, 74, 0.6)
    );
    border-radius: 22px;
    opacity: 0;
    z-index: -1;
    transition: opacity 0.3s ease;
    animation: glow 3s ease-in-out infinite;
  }

  &:hover {
    transform: translateY(-15px) scale(1.03) rotateX(5deg);
    box-shadow: 
      0 25px 60px rgba(0, 0, 0, 0.4),
      0 0 50px rgba(0, 183, 74, 0.3);

    &::before {
      opacity: 1;
    }
  }

  .character-image {
    width: 100%;
    height: 300px;
    object-fit: cover;
    transition: all 0.4s ease;
    position: relative;
    
    &:hover {
      transform: scale(1.08);
    }

    // Overlay con gradiente en la imagen
    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: 60px;
      background: linear-gradient(transparent, rgba(0, 0, 0, 0.3));
      pointer-events: none;
    }
  }

  .character-info {
    padding: 25px;
    background: linear-gradient(180deg, transparent 0%, rgba(255, 255, 255, 0.1) 100%);

    h3 {
      margin: 0 0 20px 0;
      font-size: 24px;
      font-weight: 800;
      background: linear-gradient(45deg, $primary-green, $secondary-blue);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-align: center;
      border-bottom: 3px solid transparent;
      border-image: linear-gradient(45deg, $primary-green, $secondary-blue) 1;
      padding-bottom: 12px;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      position: relative;

      // Efecto de subrayado animado
      &::after {
        content: "";
        position: absolute;
        bottom: -3px;
        left: 50%;
        width: 0;
        height: 3px;
        background: linear-gradient(45deg, $primary-green, $secondary-blue);
        transition: all 0.3s ease;
        transform: translateX(-50%);
      }
    }

    &:hover h3::after {
      width: 100%;
    }

    p {
      margin: 12px 0;
      font-size: 15px;
      color: $text-light;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 8px 12px;
      border-radius: 8px;
      background: rgba(255, 255, 255, 0.5);
      backdrop-filter: blur(5px);
      transition: all 0.2s ease;

      &:hover {
        background: rgba(255, 255, 255, 0.8);
        transform: translateX(5px);
      }

      &:first-of-type::before {
        content: "üíö";
        font-size: 18px;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
      }

      &:last-of-type::before {
        content: "üß¨";
        font-size: 18px;
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
      }

      // Status specific styling con colores m√°s vibrantes
      &:first-of-type {
        &:contains("Alive") {
          color: $success-green;
          background: rgba(39, 174, 96, 0.1);
          border-left: 4px solid $success-green;
        }
        &:contains("Dead") {
          color: $error-red;
          background: rgba(231, 76, 60, 0.1);
          border-left: 4px solid $error-red;
        }
        &:contains("unknown") {
          color: $warning-orange;
          background: rgba(243, 156, 18, 0.1);
          border-left: 4px solid $warning-orange;
        }
      }

      &:last-of-type {
        background: rgba(14, 125, 184, 0.1);
        border-left: 4px solid $secondary-blue;
      }
    }
  }
}

// Animations
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes sparkle {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
  }
  33% {
    transform: translateX(30px) translateY(-30px) rotate(120deg);
  }
  66% {
    transform: translateX(-20px) translateY(20px) rotate(240deg);
  }
  100% {
    transform: translateX(0) translateY(0) rotate(360deg);
  }
}

@keyframes wave {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(0, 183, 74, 0.3);
  }
  50% {
    box-shadow: 0 0 40px rgba(0, 183, 74, 0.6);
  }
}

// Responsive Design
@media (max-width: 768px) {
  .character-container {
    padding: 15px;
    margin: 10px;
    border-radius: 15px;
  }

  .search-container {
    flex-direction: column;
    gap: 10px;
    padding: 20px;

    input, button {
      width: 100%;
      padding: 12px 15px;
    }
  }

  .character-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 15px;
  }

  .character-card {
    .character-image {
      height: 250px;
    }

    .character-info {
      padding: 15px;

      h3 {
        font-size: 18px;
      }
    }
  }
}

@media (max-width: 480px) {
  .character-grid {
    grid-template-columns: 1fr;
    gap: 15px;
  }

  .character-card {
    margin: 0 10px;
  }
}

// Enhanced Loading State with more details
.loading-state {
  text-align: center;
  padding: 60px 20px;
  background: 
    linear-gradient(135deg, rgba(255, 255, 255, 0.95) 0%, rgba(255, 255, 255, 0.85) 100%);
  border-radius: 20px;
  margin-bottom: 20px;
  box-shadow: 
    0 15px 35px rgba(31, 38, 135, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.6);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  position: relative;
  overflow: hidden;

  // Efecto de ondas de carga
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent, 
      rgba(0, 183, 74, 0.2), 
      transparent
    );
    animation: shimmer 2s infinite;
  }

  p {
    font-size: 20px;
    color: $secondary-blue;
    margin: 0;
    font-weight: 600;
    animation: pulse 1.5s infinite;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  &::after {
    content: "üõ∏";
    position: absolute;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 56px;
    animation: float 2s ease-in-out infinite, spin 8s linear infinite;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  }
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

@keyframes spin {
  0% {
    transform: translateX(-50%) rotate(0deg);
  }
  100% {
    transform: translateX(-50%) rotate(360deg);
  }
}
